Documento de Requisitos de Produto (PRD): Assistente Legislativo com IA (MVP)
Vers√£o: 1.0

Data: 15 de Junho de 2025

Autor: Gemini

Status: Proposta

1. Introdu√ß√£o e Resumo
Este documento descreve os requisitos para o Produto M√≠nimo Vi√°vel (MVP) de uma aplica√ß√£o web interna, destinada aos funcion√°rios da C√¢mara Municipal. A ferramenta, denominada "Assistente Legislativo", tem como objetivo central fornecer uma interface de consulta inteligente e √°gil para a base de documentos legislativos do munic√≠pio (leis, decretos, portarias, etc.). A aplica√ß√£o contar√° com um sistema de autentica√ß√£o para garantir o acesso restrito, uma interface de chat similar ao Google Gemini para intera√ß√£o com um modelo de linguagem (LLM) e um hist√≥rico de conversas para refer√™ncia futura.

2. O Problema
Atualmente, os funcion√°rios da C√¢mara Municipal, especialmente dos setores jur√≠dico, administrativo e gabinetes, enfrentam desafios significativos ao pesquisar informa√ß√µes na base documental. O processo manual √© demorado, propenso a falhas e requer conhecimento pr√©vio da estrutura legislativa para ser eficaz. A dificuldade em localizar rapidamente artigos, revoga√ß√µes ou ementas espec√≠ficas resulta em atrasos na elabora√ß√£o de pareceres, respostas a of√≠cios e na tomada de decis√µes di√°rias.

3. Objetivos e M√©tricas de Sucesso do MVP
O prop√≥sito deste MVP √© validar a hip√≥tese de que uma ferramenta de IA pode aumentar drasticamente a efici√™ncia e a precis√£o dos funcion√°rios na busca por informa√ß√µes legislativas.

Objetivo 1: Aumentar a Efici√™ncia Operacional

M√©trica Chave: Reduzir o tempo m√©dio para encontrar uma informa√ß√£o jur√≠dica espec√≠fica em 70%, em compara√ß√£o com o m√©todo de pesquisa manual.

Objetivo 2: Garantir Usabilidade e Ado√ß√£o

M√©trica Chave: Atingir uma taxa de ado√ß√£o de 60% entre os usu√°rios-alvo (funcion√°rios selecionados) no primeiro m√™s ap√≥s o lan√ßamento.

M√©trica Chave: Obter uma pontua√ß√£o de satisfa√ß√£o do usu√°rio (CSAT) de no m√≠nimo 4 de 5, medida atrav√©s de um formul√°rio de feedback simples dentro da aplica√ß√£o.

Objetivo 3: Assegurar a Estabilidade T√©cnica

M√©trica Chave: Manter uma taxa de sucesso superior a 99% nas chamadas de API entre o Frontend e o backend do LLM, com um tempo de resposta (p95) abaixo de 8 segundos.

4. Personas de Usu√°rios
Persona Prim√°ria: O Assessor Jur√≠dico/Legislativo

Necessidades: Precisa de respostas r√°pidas, precisas e com fontes claras (cita√ß√£o de lei e artigo). Utilizar√° a ferramenta para acelerar a reda√ß√£o de pareceres, verificar informa√ß√µes sobre vig√™ncia, revoga√ß√µes e compilar dados para projetos de lei.

Comportamento: √â um usu√°rio avan√ßado, que realizar√° consultas complexas e valoriza a confiabilidade e a rastreabilidade da informa√ß√£o.

Persona Secund√°ria: O Servidor Administrativo

Necessidades: Precisa de respostas diretas para quest√µes operacionais do dia a dia (ex: "Qual lei regulamenta o estacionamento no centro?", "Quais os requisitos para a licen√ßa X?").

Comportamento: Utilizar√° a ferramenta para tirar d√∫vidas pontuais e garantir que os procedimentos administrativos est√£o em conformidade com as normas vigentes.

5. Requisitos Funcionais
√âpico 1: Gest√£o de Acesso e Autentica√ß√£o üîê
RF-001: Tela de Login: A aplica√ß√£o deve ter uma tela de login com campos para "E-mail" e "Senha", um link para "Esqueci minha senha" e um bot√£o "Entrar".

RF-002: Autentica√ß√£o de Usu√°rio: O sistema deve validar as credenciais do usu√°rio contra uma base de dados pr√©-cadastrada. Mensagens de erro claras devem ser exibidas para credenciais inv√°lidas.

RF-003: Acesso Restrito: Nenhuma rota da aplica√ß√£o, exceto a de login e recupera√ß√£o de senha, deve ser acess√≠vel a usu√°rios n√£o autenticados.

RF-004: Logout: Deve haver um bot√£o vis√≠vel no perfil do usu√°rio para encerrar a sess√£o de forma segura, redirecionando para a tela de login.

√âpico 2: Interface Principal de Consulta (Chat) üí¨
RF-005: Layout de Duas Colunas: A tela principal deve ser dividida em uma barra lateral esquerda (para hist√≥rico) e a √°rea de chat principal √† direita.

RF-006: Campo de Inser√ß√£o de Consulta: Um campo de texto na parte inferior da √°rea de chat permitir√° ao usu√°rio digitar suas perguntas. O campo deve ser multilinha e ter um bot√£o para "Enviar" ou ser acionado pela tecla "Enter".

RF-007: Exibi√ß√£o da Conversa: A √°rea de chat exibir√° as perguntas do usu√°rio e as respostas do LLM em formato de di√°logo, com diferencia√ß√£o visual clara entre as partes. A resposta do LLM deve suportar a formata√ß√£o Markdown para melhor legibilidade (listas, negrito, etc.).

RF-008: Indicador de Processamento: Durante o processamento da consulta pela API, um indicador visual (ex: anima√ß√£o de "digitando...") deve ser exibido para informar que a resposta est√° sendo gerada.

√âpico 3: Hist√≥rico de Consultas üìñ
RF-009: Listagem do Hist√≥rico: A barra lateral esquerda exibir√° uma lista de todas as conversas anteriores do usu√°rio logado, ordenadas cronologicamente (a mais recente no topo).

RF-010: T√≠tulo da Conversa: Cada item na lista de hist√≥rico deve ter um t√≠tulo curto e significativo, gerado automaticamente pela API a partir da primeira pergunta da conversa.

RF-011: Carregar Conversa: Clicar em um item do hist√≥rico deve carregar a conversa correspondente na √°rea de chat principal. O item selecionado deve ficar visualmente destacado.

RF-012: Iniciar Nova Conversa: Um bot√£o "Nova Consulta" (ou √≠cone "+") no topo da barra lateral deve limpar a √°rea de chat e iniciar uma nova conversa, que ser√° adicionada ao hist√≥rico ap√≥s a primeira pergunta.

6. Requisitos de Integra√ß√£o (API)
O Frontend se comunicar√° com o backend do LLM atrav√©s de uma API RESTful segura.

Autentica√ß√£o: Todas as chamadas para endpoints protegidos devem incluir um Bearer Token (JWT) no header Authorization.

Endpoints Esperados:

POST /api/auth/login

Payload: { "email": "user@email.com", "password": "user_password" }

Resposta (Sucesso): { "token": "JWT_AUTH_TOKEN", "user": { "name": "Nome do Usu√°rio" } }

POST /api/chat/query

Payload: { "question": "Texto da pergunta do usu√°rio", "conversation_id": "optional_id" } (se for uma conversa existente)

Resposta (Sucesso): { "answer": "Resposta em Markdown.", "conversation_id": "new_or_existing_id" }

GET /api/chat/history

Resposta (Sucesso): [ { "id": "convo_id_1", "title": "Lei sobre estacionamento" }, ... ]

GET /api/chat/history/{id}

Resposta (Sucesso): { "id": "convo_id_1", "messages": [ {"role": "user", "content": "..."}, {"role": "assistant", "content": "..."} ] }

7. Requisitos N√£o Funcionais
Seguran√ßa: Utiliza√ß√£o de HTTPS para toda a comunica√ß√£o. Senhas n√£o devem ser armazenadas em texto plano.

Desempenho: O tempo de carregamento inicial da aplica√ß√£o (First Contentful Paint) deve ser inferior a 3 segundos.

Compatibilidade: A aplica√ß√£o deve ser funcional nas duas vers√µes mais recentes dos navegadores Google Chrome, Mozilla Firefox e Microsoft Edge em sistemas operacionais desktop.

Usabilidade: A interface deve ser limpa, intuitiva e autoexplicativa, minimizando a necessidade de treinamento.

8. Fora do Escopo do MVP
As seguintes funcionalidades n√£o ser√£o inclu√≠das nesta vers√£o para garantir um lan√ßamento focado e r√°pido:

Cadastro de novos usu√°rios ou painel de administra√ß√£o (ser√° feito via banco de dados).

Recupera√ß√£o de senha.

Edi√ß√£o ou exclus√£o de mensagens individuais no chat.

Renomea√ß√£o manual dos t√≠tulos do hist√≥rico.

Exclus√£o de conversas do hist√≥rico.

Compartilhamento de conversas.

Upload de arquivos para an√°lise pelo LLM.

Modo escuro (Dark Mode).

Responsividade completa para dispositivos m√≥veis (o foco √© o uso em desktop).

Notifica√ß√µes em tempo real.