version: '3.8'

services:
  app:
    image: minha-imagem:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    environment:
      - NODE_ENV=production
      - SESSION_SECRET=${SESSION_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - INTERNAL_LAWS_API_URL=${INTERNAL_LAWS_API_URL}
      - INTERNAL_LAWS_API_KEY=${INTERNAL_LAWS_API_KEY}
    volumes:
      - app_data:/app/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot_www:/var/www/certbot/:ro
      - certbot_conf:/etc/nginx/ssl/:ro
    # Configuração inline do nginx usando command
    command: |
      sh -c "cat > /etc/nginx/nginx.conf << 'EOF'
      events {
          worker_connections 1024;
      }
      http {
          include       /etc/nginx/mime.types;
          default_type  application/octet-stream;
          
          upstream app {
              server app:5000;
          }
          
          server {
              listen 80;
              server_name legislative-ai.airdata.com.br;
              
              location /.well-known/acme-challenge/ {
                  root /var/www/certbot;
              }
              
              location / {
                  proxy_pass http://app;
                  proxy_set_header Host \$$host;
                  proxy_set_header X-Real-IP \$$remote_addr;
                  proxy_set_header X-Forwarded-For \$$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$$scheme;
              }
          }
      }
      EOF
      && nginx -g 'daemon off;'"
    networks:
      - app_network

volumes:
  app_data:
    driver: local
  certbot_www:
    driver: local
  certbot_conf:
    driver: local

networks:
  app_network:
    driver: overlay
    attachable: true
